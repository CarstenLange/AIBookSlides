---
title: "Intro to Machine Learning"
subtitle: "Types, Tasks, Terminology"
format: 
  revealjs:
    code-fold: true
---

# Introduction to Machine Learning

## What is What?

-   Artificial Intelligence (AI),
-   Machine Learning,
-   Deep Learning
-   Big Data

## What is What?

![Types of AI](Images/TypesOfAI1.png)

## What is What? {auto-animate="true"}

![Types of AI](Images/TypesOfAI2.png)

## What is What?

![Types of AI](Images/TypesOfAI3.png)

## What About Big Data

## What About Big Data

-   Big Data is not a category of learning. It is a category of data!!!
-   Two common definitions
    -   Laymen: Many records (thousands?, millions?, billions?)
    -   Experts: So many records that they do not fit in the memory of one computer.
        -   At least billions of records.
        -   Requires distributed computing.

## Three Applications of Machine Learning {auto-animate="true"}

::: nonincremental
-   Regression
-   Classification
-   Cluster
:::

## Three Applications of Machine Learning {.smaller auto-animate="true"}

::: nonincremental
-   Regression
    -   Outcome variable is continuous
    -   We try to predict a numerical value
-   Classification
-   Cluster
:::

## Three Applications of Machine Learning {auto-animate="true"}

::: nonincremental
-   Regression
-   Classification
-   Cluster
:::

## Three Applications of Machine Learning {.smaller auto-animate="true"}

::: nonincremental
-   Regression
-   Classification
    -   Outcome variable is categorial
    -   Most of the times 2 categories such as:
        -   Yes/No
        -   Red Wine/White Wine
        -   True/False
        -   often represented as dummies: 1/0
    -   Sometimes more than two catogories (ordered or unordered):
        -   good, fair, bad (ordered)
        -   red, blue, green (unordered)
        -   strongly agree, agree, disagree, strongly disagree (ordered)
-   Cluster
:::

## Three Applications of Machine Learning {auto-animate="true"}

::: nonincremental
-   Regression
-   Classification
-   Cluster
:::

## Three Applications of Machine Learning {.smaller auto-animate="true"}

::: nonincremental
-   Regression
-   Classification
-   Cluster
    -   Sorting observations into a number of groups based on feature variables.
    -   Groups are as homogenous inside as possible.
    -   Groups are as diverse between groups (when comparing groups)
:::

## Three Applications of Machine Learning {auto-animate="true"}

::: nonincremental
-   Regression
-   Classification
-   Cluster
:::

## Terminolgy {.smaller}

First 3 Observations (records) of the Housing Dataset (to predict house prices)

```{r}
#| echo: true
library(rio);library(tidyverse)
DataHousing =
  import("https://lange-analytics.com/AIBook/Data/HousingData.csv") %>% 
  select(Price=price, Sqft=sqft_living, Bedrooms=bedrooms,Waterfront=waterfront)
print(DataHousing[1:3,])
```

Tidy data:

-   Observations (synonym: records) are in the rows.
-   Variables (synonym: features) are in the columns.
-   Variable names (column names) are in the first row.
-   Data are in individual cells (and they form vectors; column names can be interpreted as vector names).

## Terminolgy {.smaller}

::: panel-tabset
### Main

First 3 Observations (records) of the Housing Dataset (predict house prices)

```{r}
#| echo: true
library(rio);library(tidyverse)
DataHousing =
  import("https://lange-analytics.com/AIBook/Data/HousingData.csv") %>% 
  select(Price=price, Sqft=sqft_living, Bedrooms=bedrooms,Waterfront=waterfront)
print(DataHousing[1:3,])
```

-   **Outcome Variable**: The variables that is the outcome of the prediction ($Price$)

-   **Predictor Variables**: The variables that **predict** an outcome ($Sqft$, $Bedrooms$, $Waterfront$)

-   **Example linear regression:** 
$$Price=\beta_1 \cdot Sqft+ \beta_2 \cdot Bedrooms +\beta_3 \cdot Waterfront+\beta_4$$

### Synonyms

-   **Synonyms for Outcome Variable:**

    ::: nonincremental
    -   Response variable (it responds to the predictors)
    -   Dependent variable (it is dependent on the predictors)
    -   Endogenous variable (it is dependent on the predictors)
    :::

-   **Synonyms for Predictor Variables:**

    ::: nonincremental
    -   Explanatory variables variables (they explain the outcome)
    -   Independent variables (they are chosen independently to see how the impact the outcome)
    -   Exogenous variable (they are chosen independently to see how the impact the outcome)
    :::
:::


## Prediction

**Predicting** means that we use the values for one or more known variables to estimate an *outcome*. Predictions can be forecasts. For example if we predict tomorrows weather based on todays weather and the barometric change of pressure from today. However, *predictions* are often not forecasts. E.g., if we predict the price of a house (today) based on it's square footage (today). 

We distinguish variables where we know the value from variables that we have predicted by adding a *hat* on the predicted variable. For example $Price_i$ would indicate the price of a specific house (the house $i$) that we know, while $\widehat{Price_i}$ would indicate that the price of the house is *predicted* based on a model.


## Model {.smaller}

A *model* is what we use to predict a variable based on values of other variables, and given certain assumptions. 

This sounds complicated, but can be easily explained when using an example. Suppose, we try to predict real estate prices based on the square footage of a house with ordianry least square regression, which implies that the relation beween price ($Price$) and square footage ($Sqft$) is linear and can be expressed as:
    
$$\widehat{Price_i}=\beta_1 Sqft_i + \beta_2$$

    
## Fitted Model {.smaller}

Can we use the model from the previous slide to predict the price of a house, if we know the house's square footage? YES and NO 

Suppose OLS  based on data determines that $\beta_1=300$ an that $\beta_2=500,000$ than our model would look like this:
$$\widehat{Price_i}=300 Sqft_i + 500000$$

A model where the parameters (the $\beta's$) have been determined by a machine learning algorithm is called a **fitted model**.
    
**A fitted model can be used for predictions.** E.g., a house with a square footage of 1,000 sqft is predicted to cost $8000,000 in our case: 
    
    $$\widehat{Price_i}=300 \cdot 1,000 + 500,000= 800,000$$

## Parameters
  The $\beta s$ of a model. Machine learning can be (over)simplified to the following steps:
  
  1. Determine the modl including the $\beta s$ 
  
  2. Use machine learning to determine the $\beta s$ and therefore create a *fitted model*
  
  3. Use the itted model o predict based on *predictor variables*


## Why Using R for Machine Learning?

Alternatives

- Phython
- SAS
- Stata
- SPSS