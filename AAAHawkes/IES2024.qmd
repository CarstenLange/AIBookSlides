---
title: "Innovative Educators"
subtitle: "Virtual Summit, 2024-02-29"
format: 
  revealjs:
    code-fold: false
    scrollable: false
    echo: true
    incremental: false
---

## .

![](Dr.%20Carsten%20Lange.png){fig-align="center"}

## Topics Covered {.scrollable .smaller}

::: incremental
1.  **R Package TeachHist**
    -   Uses ggplot2 R package for histograms
    -   In addition to the original horizontal axis, a **Z-score axis** is displayed
    -   Displays data, confidence intervals, and hypothesis tests.
2.  **Quarto RevealJS Slides**
    -   Support R and Python coding
    -   Browser-based, but it also supports PDF (and PowerPoint)
    -   Supports LaTex equations out of the box
3.  **Google Colab**
    -   supports interactive R and Python in a browser
    -   no software requirements other than an Internet browser
    -   supports interactive tutorials
    -   requires a Google account for authors and users (viewing works without account)
4.  **Quarto for Books/Tutorial**
    -   Supports R and Python when writing tutorials or books
    -   Generates HTML and PDF simultaneously
    -   Supports LaTex
5.  **LearnR Package**
    -   Starts in *RStudio* and runs in a browser
    -   Fully interactive tutorial questions
    -   Supports Hints and Solution
    -   Faster than Google Colab when working with big packages
:::

## Start Quarto

In *RStudio's* main menu:\
`File -> New File -> Quarto Presentation -> RevealJS`

Documentation with sample template:\
[https://quarto.org/docs/presentations/revealjs/](https://quarto.org/docs/presentations/revealjs/){.uri target="_blank"}\

## TeachHist: Histograms for Teaching (Preparation) 

Data source: 2012 US Army Anthropometric Survey

```{r}
#| output-location: fragment
library(tidyverse)
library(rio)
DataFemHeight=import("https://econ.lange-analytics.com/RData/Datasets/DataUSArmyBodyMeasures.xlsx", ) |> 
select(HeightIn=Heightin)
head(DataFemHeight)
```

::: footer
Data Source: [https://ph.health.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx](https://ph.health.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx){.uri target="_blank"}
:::

## Determining N

```{r}
#| output-location: fragment 
N=nrow(DataFemHeight)
cat("Number of female soldiers:", N)
```

::: {.footer target="_blank"}
Data Source: <https://ph.health.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx>
:::

## Determining N with Python

```{python}
#| output-location: fragment
DataFemHeightPy=r.DataFemHeight
N=len(DataFemHeightPy["HeightIn"])
print(f"Number of female soldiers: {N}")
```

. . .

\`\`\`Â  `{python}`\
`DataFemHeightPy=r.DataFemHeight`\
`len(DataFemHeightPy["HeightIn"])`\
`print(f"Number of female soldiers: {N}")`\
\`\`\`

::: {.footer target="_blank"}
Data Source: <https://ph.health.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx>
:::

## Calculating Mean

$$
\bar{x}=\sum_{i=1}^N 
$$

```{r}
#| output-location: fragment 
mean(DataFemHeight$HeightIn)
```

::: {.footer target="_blank"}
Data Source: <https://ph.health.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx>
:::

## Calculating Standard Deviation

$$
SD=\sqrt\frac{\sum_{i=1}^N (x_i - \bar{x})^2}
        {N-1}
$$

```{r}
#| output-location: fragment 
sd(DataFemHeight$HeightIn)
```

::: {.footer target="_blank"}
Data Source: <https://ph.health.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx>
:::

## Displaying Data with TeachHist (Count Diagram)

```{r}
#| output-location: fragment 
library(TeachHist)
TeachHistCounts(PlotData=DataFemHeight, 
                PrintZAxis = FALSE)
```

## Displaying Data with TeachHist (RelFreq Diagram)

Here goes RelFreq chart

## Displaying Data with TeachHist (RelFreq Diagram) --- More Granular

```{r}
#| code-fold: true
#| code-summary: "Click Play-Button to show the code"  
library(TeachHist) 
TeachHistRelFreq(PlotData=DataFemHeight, BinWidth=0.5)
```

## From Relative Frequency to Density(RelFreq Diagram)

-   So far: the output was generated by *R* but it was not truely interactive

-   *Google Colab* allows executing *R* and *Python* code in a browser

-   *Google Colab* can be integrated into *Quarto* with a link (opens in new tab; see the footer)

-   To execute *Google Colab* a *Google* account is required

::: footer
[https://colab.research.google.com/drive/1h2H09DlpFZrf7uzgQOG_hlMD1ryfRLm7?usp=sharing](https://colab.research.google.com/drive/1h2H09DlpFZrf7uzgQOG_hlMD1ryfRLm7?usp=sharing "Click to open Google Colab session."){target="_blank"}
:::

## Solution for the Assignemnt

```{r}
#| code-fold: true
#| code-summary: "Click Play-Button to show the code"  
TeachHistDens(PlotData=DataFemHeight, VLine2 = 70.2)
```



## Creating a Book/Tutorial with Quarto Combined with LearnR

See: Practical Machine Learning with R


## Confidence Intervall

```{r}
#| output-location: fragment
TeachHistConfInterv(SampleMean=64.6, StandardError=2.8/sqrt(1986),Confidence=0.95, IsSdEstimated=TRUE, DegreeFreedom=1985)
```


## Hyptheses Test: 
### True Height of female soldiers is 65


```{r}
#| output-location: fragment
TeachHistHypTest(NullHyp=65, StandardError=2.8/sqrt(1986), SampleMean=64.6, TestType="BothTails", IsSdEstimated=TRUE, DegreeFreedom=1985, XAxisMax = 7, BinWidth = 1)
```


## Thank You!

-   **Link to these slides:** [https://tinyurl.com/Quarto2024](https://tinyurl.com/Quarto2024){target="_blank"}

-   **Link to Google Colab demo:** [https://tinyurl.com/GoogleColabSample](https://colab.research.google.com/drive/1h2H09DlpFZrf7uzgQOG_hlMD1ryfRLm7?usp=sharing){target="_blank"}

-   **Link to:** [R TeachHist package video](https://www.youtube.com/watch?v=DB5isjqmV5c){target="_blank"}

-   **Link to:** [My YouTube channel](https://www.youtube.com/@carstenlange8073){target="_blank"}

-   **Link to:** [Practical Machine Learning with R](https://ai.lange-analytics.com/htmlbook "Machine Learning Textbook"){target="_blank"} (with LearnR examples\
    User name: `aibook`\
    Pasword: `Coming022024#` (please keep confidential)

-   **Link to:** [My Blog](https://blog.lange-analytics.com/){target="_blank"} (going live on 5/1/2024)

