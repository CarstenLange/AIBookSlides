---
title: "Standard Deviation and Normal Distribution"
subtitle: "Review"
format: 
  revealjs:
    code-fold: false
    incremental: false
    scrollable: true
    echo: true
---



## What Will You Learn {.scrollable .smaller}
```{r}
#| echo: false
library(kableExtra)

```
-   You will review the concept of Variance to measure the spread of a variable.
-   You will review the concept of Standard Deviation to measure the spread of a variable.
- You will explain  why Standard Deviation is so important for the concept of Normal Distribution.

 

## The Data 

**Source:**

- 2012 US Army Anthropometric Survey (ANSUR II)Â 
- DCPH (Defense Center for Public Health) - Aberdeen
- https://phc.amedd.army.mil/topics/workplacehealth/ergo/Pages/Anthropometric-Database.aspx
- 6068 observations (4082 male, 1986 female) with 108 measures (variables/columns)

## The Data 

**Download:**

```{r}
#| code-fold: true
#| output-location: fragment
library(rio)
library(janitor)
library(tidymodels)
DataSoldiersM=import("https://econ.lange-analytics.com/RData/Datasets/DataUSArmyBodyMeasures.xlsx", sheet="DataMale")|> 
              clean_names("upper_camel") |> 
              select(Height=Heightin, Weight=Weightlbs, Gender)
DataSoldiersF=import("https://econ.lange-analytics.com/RData/Datasets/DataUSArmyBodyMeasures.xlsx", sheet="DataFemale") |> 
              clean_names("upper_camel") |> 
              select(Height=Heightin, Weight=Weightlbs, Gender)

DataSoldiers=merge(DataSoldiersF, DataSoldiersM, all=TRUE)
head(DataSoldiersF)
head(DataSoldiersM)
head(DataSoldiers) #where are the males?
```

## Plot Height Male and Female Point Plot 

```{r}
#| code-fold: true
ggplot(DataSoldiers, aes(x=Gender, y=Height, color=Gender))+
  geom_point()
  
```


## Plot Height Male and Female Jitter Plot

```{r}
#| code-fold: true
ggplot(DataSoldiers, aes(x=Gender, y=Height, color=Gender))+
  geom_jitter()
  
```

## Plot Height Male and Female Jitter Plot alpha=0.1)

```{r}
#| code-fold: true
ggplot(DataSoldiers, aes(x=Gender, y=Height, color=Gender))+
  geom_jitter(alpha=0.1)
```



# Height Regression

```{r}
RecipeHeightGender=recipe(DataSoldiers, Height~Gender) |> 
                   step_dummy(Gender)

ModelDesignLinear=linear_reg() |> 
                  set_engine("lm") |> 
                  set_mode("regression")

WFModelHeight= workflow() |> 
                  add_recipe(RecipeHeightGender) |> 
                  add_model(ModelDesignLinear) |> 
                  fit(DataSoldiers)

tidy(WFModelHeight)
```

## Mean Heights

```{r}
MeanHeightF=mean(DataSoldiersF$Height)
MeanHeightM=mean(DataSoldiersM$Height)
cat("Mean Height Female:",MeanHeightF)
cat("Mean Height Male:",MeanHeightM)
```

## Plotting the Means

```{r}
#| code-fold: true
ggplot()+
  geom_vline(xintercept=MeanHeightF, color="red", size=2)+
  geom_vline(xintercept=MeanHeightM, color="blue", size=2)+
  scale_x_continuous(breaks=seq(62,72,0.5))
```


## Including the Data - Female Height Spread


```{r}
#| code-fold: true
ggplot(DataSoldiersF, aes(x=Height, y=c(1:1986)))+
  geom_point(color="red")+
  geom_vline(xintercept=MeanHeightF, size=2)

```



We need a way to measure the Spread and find a way to show the distribution.




## Including the Data - Male Height Spread (with male (black) and female mean (red))


```{r}
#| code-fold: true
ggplot(DataSoldiersM, aes(x=Height, y=c(1:4082)))+
  geom_point(color="blue")+
  geom_vline(xintercept=MeanHeightM, size=2)+
  geom_vline(xintercept=MeanHeightF, size=2, color="red")
```


## Measuring Female Height Spread for a Small Sample

```{r echo=FALSE}
#| code-fold: true
ggplot(DataSoldiersF[2:4,], aes(x=Height, y=c(1:3)))+
  geom_vline(xintercept=mean(DataSoldiersF[2:4,]$Height), size=2)+
  geom_point(color="red", size=3)+
  ylab("")+
  theme(axis.text.y=element_blank(),
        axis.ticks.y=element_blank() 
        )
```

Sample Mean: $\bar x=66$

Sample Variance: $$Var=\frac{\sum_{i=1}^N (x_i-\bar x)^2}{N-1}=\frac{4+0+4}{3-1}=4$$

## Measuring Female Height Spread for a Small Sample

```{r }
#| code-fold: true
ggplot(DataSoldiersF[5:8,], aes(x=Height, y=c(1:4)))+
  geom_vline(xintercept=mean(DataSoldiersF[5:8,]$Height), size=2)+
  geom_point(color="red", size=3)+
  ylab("")+
  theme(axis.text.y=element_blank(),
        axis.ticks.y=element_blank() 
        )
```

Sample Mean: $\bar x=65.25$

Sample Variance: $$Var=\frac{\sum_{i=1}^N (x_i-\bar x)^2}{N-1}=???$$

## Sample Standard Deviation

$$SD=\sqrt{\underbrace{\frac{\sum_{i=1}^N (x_i-\bar x)^2}{N-1}}_{Var}}$$

$$SD=\sqrt{Var}$$
What is so special about SD?

## SD is related to Normal Distribution {.smaller}

Normal Distribution:

1. Most values are in the middle (close to mean)
2. Some values are not too far left and right of th mean (the middle).
3. Few values are far from the mean (the middle).
4. Distribution is symmetric.

Normal Distribution is for mean=100, sd=10 (we discuss empirical rule later):

```{r }
#| code-fold: true
library(TeachHist)
TeachHistDens(Mean=100, Sd=10, SeedValue = 777)
```

## Relative Frequency Plot for 1000 Random Observations

Normal Distribution is for 1000 rand. obs. (mean=100, sd=10):

```{r }
#| code-fold: true
library(TeachHist)
TeachHistRelFreq(Mean=100, Sd=10, SeedValue = 777)
```

## Empirical Rule {.smaller}

1. 68% of the data deviate **one standard deviation** or less from the mean.

2. 95% of the data deviate **two standard deviation**  or less from the mean.

2. 97.3% of the data deviate **three standard deviation**  or less from the mean.

Normal Distribution is for mean=100, sd=10:

```{r }
#| code-fold: true
library(TeachHist)
TeachHistDens(Mean=100, Sd=10, SeedValue = 777)
```

## Female Height: Showing a Frequency Plot (Histogram) {.smaller}


```{r}
#| code-fold: true
library(TeachHist)
MeanFemHeight=mean(DataSoldiersF$Height)
MeanFemSD=sd(DataSoldiersF$Height)
cat("Mean Female Height:", MeanFemHeight)
cat("Female SD:", MeanFemSD)
TeachHistRelFreq(PlotData = DataSoldiersF["Height"])
```



## Showing a Density Plot (Rel Frq. are in area){.smaller}

```{r}
#| code-fold: true
library(TeachHist)
cat("Mean Female Height:", MeanFemHeight)
cat("Female SD:", MeanFemSD)
TeachHistDens(PlotData = DataSoldiersF["Height"], PlotNormCurv = FALSE)
```




## Showing a Density Plot with Normal Curve {.smaller}

```{r}
#| code-fold: true
cat("Mean Female Height:", MeanFemHeight)
cat("Female SD:", MeanFemSD)
TeachHistDens(PlotData = DataSoldiersF["Height"])
```

## Two Normal Distribution Curves for Height of Women and Men {.smaller}


```{r}
#| code-fold: true
MeanMaleHeight=mean(DataSoldiersM$Height)
MeanMaleSD=sd(DataSoldiersM$Height)

normal_density <- function(x, mean, sd) {
  return (dnorm(x, mean = mean, sd = sd))
}

# Create a data frame with x values
x_values <- seq(50, 100, by = 0.1)
data <- data.frame(x = x_values)

# Plotting two normal curves
ggplot(data, aes(x = x)) +
  stat_function(fun = normal_density, args = list(mean = mean(DataSoldiersM$Height), sd=sd(DataSoldiersM$Height)), color = "blue", linetype = "dashed") +
  stat_function(fun = normal_density, args = list(mean = mean(DataSoldiersF$Height), sd=sd(DataSoldiersF$Height)), color = "red", linetype = "dashed") +
  labs(title = "Two Normal Curves",
       x = "X-axis",
       y = "Density") 
```

Mean Female Height: `r MeanFemHeight`, Female SD: `r MeanFemSD`)

Mean Male Height: `r MeanMaleHeight`, Male SD: `r MeanMaleSD`)