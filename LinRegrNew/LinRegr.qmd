---
title: "Key Machine Learning Concepts"
subtitle: "Explained with Linear Regression"
format: 
  revealjs:
    code-fold: true
---

```{r}
library(tidymodels)
library(rio)
library(kableExtra)
library(janitor)
DataMockup=import("https://lange-analytics.com/AIBook/Data/DataStudyTimeMockup.rds")
```

## What Will You Learn {.srollable}

- Reviewing the basic idea behind linear regression

- Learning how how to measure predictive quality with Mean Square Error ($MSE$).

- Understanding the role of parameters in a machine learning model in general and in linear regression in particular

- Calculate optimal regression parameters using OLS

- Calculate optimal regression parameters by trial and error

- Distinguish between unfitted and fitted models


- Using the tidymodels package to split observations from a dataset    randomly into a training and testing dataset (see Section 6.4).

- Understanding how categorical data such as the sex of a person (female/male) can be transformed into numerical dummy variable.

- Being able to distinguish between dummy encoding and one-hot encoding

- Using `tidymodels` including model design and data pre-processing (recipes) to analyze housing prices (see Section 6.4).

## Univariate Linear Regression - Data Table and Goal

**The Regression**

$$
#| code-fold=
\widehat{y}_{i} = \beta_{1}x_{i}+\beta_{2}
$$


**The Goal**

Find values for $\beta_0$ and $\beta_1$ that minimize the prediction errors $(\widehat{y}_{i}-y_i)^2$

**The Data**

```{r }
#| echo: true
kbl(DataMockup %>% mutate(i=1:5) %>% select(i,everything()), 
    caption="Mockup Training Dataset")%>%
  add_header_above(c(" ", "$y_i$", "$x_i$"), escape=F) %>% 
  kable_styling(bootstrap_options=c("striped","hover"), full_width = F, position="center")
```

## Univariate Linear Regression - Data Diagra and Goal

```{r}
Model123=lm(Grade~StudyTime, data=DataMockup)
PredGrade=predict(Model123, DataMockup)
ggplot(DataMockup, aes(x=StudyTime,y=Grade)) +
  geom_line(aes(y=PredGrade), color="red", size=2.7)+
  geom_point(size=5, color="blue")+
  geom_point(aes(y=PredGrade), color="black", size=2.7)+
  geom_segment(aes(x = StudyTime, y = PredGrade,
                   xend = StudyTime, yend = Grade),size=1.2)+
  scale_x_continuous("Study Time", breaks=seq(1,8))+
  scale_y_continuous(limits=c(65,110), breaks=seq(60,100,5))
```



**