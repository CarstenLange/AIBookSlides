---
title: "Qualitative Independent Variables (Dummy Variables)"
subtitle: "Regression, Dummies, One-Hot Encoding, AB-Tests"
format: 
  revealjs:
    code-fold: true
    scrollable: true
---

```{r}
library(tidymodels)
library(rio)
library(kableExtra)
library(janitor)
```

## What Will You Learn {.scrollable .smaller}

-   Understanding how categorical data such as the sex of a person (female/male) can be transformed into numerical dummy variable.

-   Being able to distinguish between dummy encoding and one-hot encoding

- Experiments and Treatment Effects

- AB-Tests

- Newest Development from Harvard University


## Dummy and One-Hot Encoding {.scrollable}

**One-Hot Encoding**

```{r}
OneHotTable=tibble(Waterfront_yes=c(0,0,1,0),Waterfront_no=c(1,1,0,1))
print(OneHotTable)
```

*One-hot* encoding is easier to interpret but causes problems in OLS (dummy trap) because one variable is redundant. We can calculate one variable from the other (*perfect multicollinearity)*:

$$Waterfront_{yes}=1-Waterfront_{no}$$ 
»

## Dummy and One-Hot Encoding {.scrollable}

**Dummy Coding**

We use one variable less than we have categories. Waterfront has two categories. Therefore, we use one variable (e.g., `Waterfront_yes`):

**Dummy Encoding Example**

```{r}
#| echo: true
DummyTable=tibble(Waterfront_yes=c(0,0,1,0))
print(DummyTable)
```

**Note,** dummy encoding can be done with `step_dummy()` in a *tidymodels recipe*.

For example: 
`recipe(Data, Y~x) |> `

`step_dummy()`
»

## Sex Based Wage Discrimination (univariate)

```{r}
#| echo: true
library(wooldridge)
library(janitor)
DataWage=wage1 %>%
clean_names("upper_camel") %>%
select(Wage, SexFem=Female)
head(DataWage)
```

## Plotting the Data

```{r}
#| echo: true
library(tidyverse)
ggplot(DataWage, aes(x=SexFem, y=Wage))+
  geom_point()
```


## Plotting the Data with Transparency (alpha) and Jittered

```{r}
#| echo: true
library(tidyverse)
ggplot(DataWage, aes(x=SexFem, y=Wage))+
  geom_jitter(width=0.05, alpha=0.27)
```

## Plotting the Data with Transparency (alpha) and Jittered

```{r}
#| echo: true
library(tidyverse)
ggplot(DataWage, aes(x=SexFem, y=Wage))+
  geom_jitter(width=0.05, alpha=0.27)+
  scale_y_continuous(limits = c(0,8))
```

## Plotting the Data with Regression Line

```{r}
#| echo: true
library(tidyverse)
ggplot(DataWage, aes(x=SexFem, y=Wage))+
  geom_jitter(width=0.05, alpha=0.27)+
  geom_smooth(method = "lm", se=FALSE)
```


## Plotting the Data with Regression Line using SexMale instead of SexFem

```{r}
#| echo: true
library(tidyverse)
DataTemp=DataWage |> mutate(SexMale=1-SexFem)
ggplot(DataTemp, aes(x=SexMale, y=Wage))+
  geom_jitter(width=0.05, alpha=0.27)+
  geom_smooth(method = "lm", se=FALSE)
```


## Regression Sex Discrimination

```{r}
#| echo: true
lm(Wage ~ SexFem, data=DataWage)
```


# Observational Data Analysis vs. AB-Test

## Fun Examples 1:

**Class Size:**

1. The Dean uses the university's course system and claims the average class size is 35 students.

2. The Student Association ask 500 students on the squad how big was the last class they attended. The result is 54

What happened?

From Allen Downey, PROBABLY OVERTHINKING IT, https://www.allendowney.com/blog/

## Fun Examples 2:

**Fertility Rate:**

We want to find the average offsprings a mother has (fertility rate) about 30 years ago?:

We survey 1,000 people age 30 and ask how many offsprings their mother had.

What is wrong with this methedology?

From Allen Downey, PROBABLY OVERTHINKING IT, https://www.allendowney.com/blog/


## Marketing Example {.smaller}

You run a company similar than ChatGPT, but it is not free. The customers (private people) can upload their own data right on the sign-in page and then use AI that considers their   data. 

The sign-in page is more like a portal and offers various services. You always thought your sign-in page is well designed.

A consulting firm made a new sign in page for you that is supposed to be better designed.

You give your customers two sign-in page options:

"classic"

"new design"

You want to test if conversion (measured in hours of services used) is higher on the newly designed sign-up page.

You collect data from last month.

## Data from Last Month {.scrollable}

```{r}
#| echo: true
library(rio)
DataObserv=import("../DataObservAndABTest.xlsx", sheet = "DataObserv")
print(DataObserv)
```

## Run a Regression with LM {.scrollable}

```{r}
#| echo: true
lm(ConvHours~NewSignUpPage, data=DataObserv)
```
Looks like the new page performed well. 5.8 more hours per month.

## Selection Bias: More Young and Educated Customers Tried the New Design {.scollable}

```{r}
#| echo: true
library(tidyverse)
DataObserv |> 
  group_by(NewSignUpPage) |> 
  summarise(mean(Age), mean(EducYears))
```


## Regression Age: Younger People use the side more often

**Age:**

```{r}
#| echo: true
lm(ConvHours~Age, data=DataObserv)
```


## Regression Educated: People with Higher Education use the side more often

**Education:**

```{r}
#| echo: true
lm(ConvHours~EducYears, data = DataObserv)
```
If education years increases by one year, monthly services used **increase by 0.49 hours**.

## AB Test - Experiment

Participants get randomly assigned to *Treatment* and *Non-Treatment* (placebo) group. Education and Age is now irrelevant because it should be equally represented in *Treatment* and *Non-Treatment*, if we have enough observations (hundred(s)): 

```{r}
#| echo: true
DataABTest=import("../DataObservAndABTest.xlsx", sheet = "DataABTest")
print(DataABTest)
```

## Regression: AB Test - Experiment

```{r}
#| echo: true
lm(data = DataABTest, ConvHours ~Treatment)
```

AB Test is very similar to Medical Trials (thus the terminology).

## AB Test or Experiment or Trial

Important:

Assign participants **randomly** to the placebo (old web page) and the trial group (new web page).

Determine the length of the experiment.

Run regression.

- Do not peak!!!


